import{_ as n,o as e,c as t,b as r}from"./app.3016158d.js";const p=JSON.parse('{"title":"介绍","description":"","frontmatter":{"layout":"doc","lang":"zh-CN"},"headers":[{"level":2,"title":"为什么要使用组件库？","slug":"为什么要使用组件库","link":"#为什么要使用组件库","children":[]},{"level":2,"title":"为什么要选择 Kunlun Design ?","slug":"为什么要选择-kunlun-design","link":"#为什么要选择-kunlun-design","children":[]}],"relativePath":"zh/guide/intro.md","lastUpdated":1674142256000}'),s={name:"zh/guide/intro.md"},a=r('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-hidden="true">#</a></h1><h2 id="为什么要使用组件库" tabindex="-1">为什么要使用组件库？ <a class="header-anchor" href="#为什么要使用组件库" aria-hidden="true">#</a></h2><p>为了项目有个<strong>统一的主题</strong>，<strong>外观</strong>和<strong>操作体验</strong>。一般来说一个项目由一个团队开发，如何保证团队里的每个人都对同一个事情有同一个认知，而这几乎不可能。</p><p>举例来说：同一种情况下，同一个按钮，不同的人用的颜色、底色、边框、圆角等不可能完全一致。就算是同一个人，也不一定能保证在同样的情况下，按钮的主题、外观、操作反馈等一定是一样的。所以现在的大多数公司制定同一个的开发标准，开发底层公共组件库，保证同一个项目中同一种情况下用户的体验是一致的。</p><p>一个完善的组件库能极大提高我们的开发效率，让我们用更多的时间专注于业务逻辑，而不需要考虑基础组件复用性、扩展性、稳定性的问题。</p><h2 id="为什么要选择-kunlun-design" tabindex="-1">为什么要选择 Kunlun Design ? <a class="header-anchor" href="#为什么要选择-kunlun-design" aria-hidden="true">#</a></h2><p><strong>Kunlun Design</strong> 开发团队，是年轻的，有活力的团队，他们能让 <strong>Kunlun Design</strong> 能被长期维护更新，在团队成员的不断精益求精和组件库使用者们的积极反馈下，<strong>Kunlun Design</strong> 绝对是您最优的选择！</p>',7),i=[a];function o(d,l,u,c,h,g){return e(),t("div",null,i)}const f=n(s,[["render",o]]);export{p as __pageData,f as default};
